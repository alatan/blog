<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>追求卓越，幸福就会不期而遇</title>
    <link>https://moge.fun/</link>
    <description>Recent content on 追求卓越，幸福就会不期而遇</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://moge.fun/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微服务方案SpringCloudAlibaba</title>
      <link>https://moge.fun/post/SpringCloudAlibaba/</link>
      <pubDate>Mon, 15 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/SpringCloudAlibaba/</guid>
      <description>Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案 组件 Nacos：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。 Sentinel：把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。 Seata：阿里巴巴开源产品，一个易于使用的高性能微服务分布</description>
    </item>
    
    <item>
      <title>分布式介绍</title>
      <link>https://moge.fun/post/distributed/</link>
      <pubDate>Wed, 10 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/distributed/</guid>
      <description>分布式理论基础 CAP 理论是分布式中基础理论，有三个重要指标：一致性、可用性、分区容错性。 一致性（Consistency） 可用性（Availability） 分区容错性（Partition Tolerance）</description>
    </item>
    
    <item>
      <title>Java架构演变历史</title>
      <link>https://moge.fun/post/JavaArchHistory/</link>
      <pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/JavaArchHistory/</guid>
      <description>Java网站架构演变过程，大致分为5个阶段，分别为单体架构、集群架构、分布式架构、SOA架构和微服务架构。 单体架构 应用、数据库、文件都部署在一台机器上。简单来讲其实就是我们熟知的SSM架构(Spring+SpringMVC+MyBatis)，把所有的业务模块都放在一个应用中开发，</description>
    </item>
    
    <item>
      <title>ArrayList详解</title>
      <link>https://moge.fun/post/ArrayList/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/ArrayList/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java容器概览</title>
      <link>https://moge.fun/post/JavaContainer/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/JavaContainer/</guid>
      <description>概览 容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对（两个对象）的映射表。 Collection List 对付顺序的好帮手： 存储的元素是有序的、可重复的。 ArrayList：基于动态数组实现，支持随机访问。 Vector：和 ArrayList 类似，但它是线程安全的。 LinkedList：基于双向</description>
    </item>
    
    <item>
      <title>框架的灵魂-反射</title>
      <link>https://moge.fun/post/reflection/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/reflection/</guid>
      <description>什么是反射 简而言之，通过反射，我们可以在运行时获得程序中每一个类型的成员和成员的信息。 程序中一般的对象的类型都是在编译期就确定下来的，而 Java 反射机制可以动态地创建对象并调用其属性，这样的对象的类型在编译期是未知的。 所以我们可以通过反射机制直接创建对象，即使这个对象的类型在编译期是未</description>
    </item>
    
    <item>
      <title>Java特性-泛型</title>
      <link>https://moge.fun/post/generic/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/generic/</guid>
      <description>泛型，即参数化类型。一提到参数，最熟悉的就是定义方法时有形参，然后调用此方法时传递实参。 那么参数化类型怎么理解呢？顾名思义，就是将类型由原来的具体的类型参数化，类似于方法中的变量参数，此时类型也定义成参数形式（类型形参），然后在使用/调用时传入具体的类型（类型实参）。 Java 语言中引入</description>
    </item>
    
    <item>
      <title>Java世界的入场券-面向对象</title>
      <link>https://moge.fun/post/Object-oriented/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/Object-oriented/</guid>
      <description>面向对象程序设计（英语：Object-oriented programming，缩写：OOP）是种具有对象概念的编程典范，同时也是一种程序开发的抽象方针。它可能包含数据、特性、代码与方法。对象则指的是类（class）的实例。它将对象作为程序的基本单元，将程序和数据封装其中，以提高软</description>
    </item>
    
    <item>
      <title>学与思</title>
      <link>https://moge.fun/post/studyAndThink/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/studyAndThink/</guid>
      <description>学而不思则罔，思而不学则殆 一味学习而不思考，就会因为不能深刻理解而不能合理有效利用学习的知识，甚至会陷入迷茫。 一味空想而不去进行实实在在地学习和钻研，则终究是沙上建塔，一无所得。 因此我们只有把学习和思考结合起来，才能学到切实有用的知识，否则就会收效甚微。</description>
    </item>
    
    <item>
      <title>Java知识大纲</title>
      <link>https://moge.fun/post/JavaOutline/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/JavaOutline/</guid>
      <description>基础 数据结构与算法 操作系统 网络基础 数据库基础 编译原理 Java Java基础 并发编程 JVM 性能优化 性能指标体系 JVM调优 Tomcat调优 MySQL调优 故障排除 最佳实践 重构 设计模式 开发框架 Spring体系 MyBatis 中间价 消息队列 缓存 本地缓存 分布式缓存 ELK 数据库 分库分表 数据同步 数据库连接池 分布式 四大理论 拜占</description>
    </item>
    
    <item>
      <title>Markdown语法</title>
      <link>https://moge.fun/post/mdGrammar/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/mdGrammar/</guid>
      <description>标题 #### 这是 H5 #### 这是 H5 段落 这是一个段落。 这是另一个段落。 这是一个段落。 这是另一个段落。 斜体 *这是斜体* 这是斜体 粗体 **这是粗体** 这是粗体 粗体+斜体 ***这是粗体+斜体*** 这是粗体+斜体 删除线 ~~没有价值就会被抛弃~~ 没有价值就会被抛弃 引用 &amp;gt; Markdown是一种可以使用普通文本</description>
    </item>
    
    <item>
      <title>投资纲领</title>
      <link>https://moge.fun/post/investment/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/post/investment/</guid>
      <description>总体策略 低估加倍 高估不买 高估卖出 好资产 + 好价格 + 长期持有 资产配置 购买标的 宽基指数（沪深300和中证500） 我们可以把沪深300和中证500这样的宽基指数作为「核心」资产，比如占整体仓位的 60% 以上，保证我们能够跟上中国经济的增长，投资到未来头部的公司。 40% 基于估值和增强型指数基金进一步</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>https://moge.fun/about/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/about/</guid>
      <description>用写作触发思考。</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://moge.fun/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/archives/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://moge.fun/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://moge.fun/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>