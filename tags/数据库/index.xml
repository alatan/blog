<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>数据库 - 标签 - 追求卓越，幸福就会不期而遇</title>
        <link>https://moge.fun/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
        <description>数据库 - 标签 - 追求卓越，幸福就会不期而遇</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 02 Mar 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://moge.fun/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" rel="self" type="application/rss+xml" /><item>
    <title>MySQL知识体系</title>
    <link>https://moge.fun/mysql/</link>
    <pubDate>Thu, 02 Mar 2017 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://moge.fun/mysql/</guid>
    <description><![CDATA[MySQL知识体系]]></description>
</item><item>
    <title>关系型数据库概览</title>
    <link>https://moge.fun/relationaldatabase/</link>
    <pubDate>Wed, 01 Mar 2017 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://moge.fun/relationaldatabase/</guid>
    <description><![CDATA[数据库总览" 数据库总览 
SQL数据库原理" SQL数据库原理 
数据库组件 SQL数据库概览" SQL数据库概览 
核心组件  进程管理器（process manager）：很多数据库具备一个需要妥善管理的进程/线程池。再者，为了实现纳秒级操作，一些现代数据库使用自己的线程而不是操作系统线程。 网络管理器（network manager）：网路I/O是个大问题，尤其是对于分布式数据库。所以一些数据库具备自己的网络管理器。 文件系统管理器（File system manager）：磁盘I/O是数据库的首要瓶颈。具备一个文件系统管理器来完美地处理OS文件系统甚至取代OS文件系统，是非常重要的。 内存管理器（memory manager）：为了避免磁盘I/O带来的性能损失，需要大量的内存。但是如果你要处理大容量内存你需要高效的内存管理器，尤其是你有很多查询同时使用内存的时候。 安全管理器（Security Manager）：用于对用户的验证和授权。 客户端管理器（Client manager）：用于管理客户端连接。  工具  备份管理器（Backup manager）：用于保存和恢复数据。 恢复管理器（Recovery manager）：用于崩溃后重启数据库到一个一致状态。 监控管理器（Monitor manager）：用于记录数据库活动信息和提供监控数据库的工具。 管理员管理器（Administration manager）：用于保存元数据（比如表的名称和结构），提供管理数据库、模式、表空间的工具。  查询管理器  查询解析器（Query parser）：用于检查查询是否合法 查询重写器（Query rewriter）：用于预优化查询 查询优化器（Query optimizer）：用于优化查询 查询执行器（Query executor）：用于编译和执行查询  数据管理器：  事务管理器（Transaction manager）：用于处理事务 缓存管理器（Cache manager）：数据被使用之前置于内存，或者数据写入磁盘之前置于内存 数据访问管理器（Data access manager）：访问磁盘中的数据  数据查询的流程 本章集中探讨数据库如何通过如下进程管理SQL查询的：
 客户端管理器 查询管理器 数据管理器（含恢复管理器） 客户端管理器  客户端管理器  客户端管理器是处理客户端通信的。客户端可以是一个（网站）服务器或者一个最终用户或最终应用。客户端管理器通过一系列知名的API（JDBC, ODBC, OLE-DB …）提供不同的方式来访问数据库。客户端管理器也提供专有的数据库访问API。]]></description>
</item></channel>
</rss>
